<div id="app">
    <section class="section">
        <div class="columns is-multiline">
            <div class="column is-one-third" v-for="person in persons">
                <div class="box">
                    <div class="block">
                        <figure class="image is-5by4">
                            <img class="has-ratio" width="150" height="120" :src="person.imageUrl">
                        </figure>
                    </div>
                    <div class="block">
                        <article class="media">
                            <figure class="media-left">
                                <p class="image is-64x64">
                                    <img src="https://bulma.io/images/placeholders/64x64.png">
                                </p>
                            </figure>
                            <div class="media-content">
                                <div class="content">
                                    <p>
                                        <strong> {{person.event}} </strong>
                                        <br> {{person.organizer}} </br>
                                    </p>
                                </div>
                            </div>
                        </article>
                    </div>

                    <a :href="'/person/read/'+person.id"> {{person.description}} </a>
                    <p> {{person.date}} </p>
                    <p> {{person.stime}} - {{person.etime}} </p>

                </div>
            </div>

            <div class="column is-one-third">

                <div class="field">
                    <label class="label">Event Name</label>
                    <div class="control">
                        <input class="input" v-model="Ename" type="text" placeholder="Text input" name="event" required>
                    </div>
                </div>

                <div class="field">
                    <label class="label">Organizer</label>
                    <div class="control">
                        <div class="select">
                            <select name="organizer" v-model="Organizer">
                                <option value="">Please pick a organizer</option>
                                <option value="Department of Computer Science">Department of Computer Science
                                </option>
                                <option value="Music Society">Music Society</option>
                                <option value="Registry">Registry</option>
                                <option value="Student Union">Student Union</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="field">
                    <label class="label">Start Date</label>
                    <div class="control">
                        <input class="input" v-model="Sdate" type="date" name="sdate">
                    </div>
                </div>

                <div class="field">
                    <label class="label">End Date</label>
                    <div class="control">
                        <input class="input" v-model="Edate" type="date" name="edate">
                    </div>
                </div>

                <div class="field">
                    <label class="label">Venue</label>
                    <div class="control">
                        <div class="select">
                            <select name="venue" v-model="Venue">
                                <option value="">Please pick a venue</option>
                                <option value="AAB">AAB</option>
                                <option value="DLB">DLB</option>
                                <option value="OEE">OEE</option>
                                <option value="WLB">WLB</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="control">
                    <button class="button is-link" @click="fetchData()">Submit</button>
                </div>
            </div>

            <div class="column is-two-thirds">
                <b-pagination :total="total" v-model="current" :range-before="rangeBefore" :range-after="rangeAfter"
                    :order="order" :size="size" :simple="isSimple" :rounded="isRounded" :per-page="perPage"
                    :icon-prev="prevIcon" :icon-next="nextIcon" aria-next-label="Next page"
                    aria-previous-label="Previous page" aria-page-label="Page" aria-current-label="Current page"
                    @change="fetchData()">
                </b-pagination>
            </div>

        </div>
    </section>
</div>


<script src="https://unpkg.com/vue"></script>
<!-- Full bundle -->
<script src="https://unpkg.com/buefy/dist/buefy.min.js"></script>

<!-- Individual components -->
<script src="https://unpkg.com/buefy/dist/components/table"></script>
<script src="https://unpkg.com/buefy/dist/components/input"></script>

<script>
    new Vue({
        el: '#app',
        data: {
            total: parseInt("<%= total %>"),
            persons: [],
            current: 1,
            perPage: 2,
            rangeBefore: 1,
            rangeAfter: 1,
            order: '',
            size: '',
            isSimple: false,
            isRounded: false,
            prevIcon: 'chevron-left',
            nextIcon: 'chevron-right',
            Ename: "",
            Organizer: "",
            Sdate: "",
            Edate: "",
            Venue: "",
        },
        computed: {
            isFirstPage: function () { return this.current <= 1 },
            isLastPage: function () { return this.current >= Math.ceil(this.total / this.perPage) },
        },
        mounted: function () {
            this.fetchData(this.perPage, this.current);
        },
        methods: {
            fetchData: async function () {

                var response = await fetch('/person/search?event=' + this.Ename + "&organizer=" + this.Organizer + "&sdate=" + this.Sdate + "&edate=" + this.Edate + "&venue=" + this.Venue + '&current=' + this.current);

                if (response.ok) {

                    this.persons = await response.json();

                } else {
                    alert(response.statusText);
                }
            },
            postData: async function () {

                var response = await fetch('https://httpbin.org/post', {
                    method: 'POST',
                    body: JSON.stringify(this.persons)
                });

                if (response.ok) {

                    var echo = await response.json();
                    alert(JSON.stringify(echo));

                } else {
                    alert(response.statusText);
                }
            }
        },
    })
</script>